package Practice15.classwork;

public class Outer {
    public static void main(String[] args) {
        Outer.Nested instance = new Outer.Nested ();
    }
    public static class Nested {

      /*В языке Джава статический вложенный класс —
      это, по сути, обычный класс, который только что был
       вложен в другой класс. Будучи статическим, статический
        вложенный класс может получить доступ только к переменным
        экземпляра включающего класса через ссылку на экземпляр
         включающего класса.*/
    } // статический вложенный класс

}

class Outer1 {
    public static void main(String[] args) {
        Outer1 outer = new Outer1();
        Outer1.Inner inner = outer.new Inner();
    }
    public class Inner { // нестатический вложенный класс
        // нестатические вложенные классы (внутренние классы) имеют доступ к полям включающего класса, даже если они объявлены закрытыми.
        /*
        Нестатические вложенные классы в Java также называются внутренними
         классами. Внутренние классы связаны с экземпляром включающего класса
         . Таким образом, вы должны сначала создать экземпляр включающего
          класса, чтобы создать экземпляр внутреннего класса.
        * */
    }
}